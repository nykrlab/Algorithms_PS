# 완전탐색 
# 완전 탐색 자체가 알고리즘은 아니기 때문에 완전 탐색 방법을 이용하기 위해서 여러 알고리즘 기법이 이용된다. 주로 이용되는 기법들은 다음과 같다.
# >> 단순 Brute-Force / 비트마스크(Bitmask) / 재귀 함수 / 순열 (Permutation) / BFS / DFS

# 그래프 이론 / 그래프 탐색 / BFS 

from collections import deque

def bfs():
  q=deque()
  q.append(n) # 수빈이 위치
  while q: # q 정수일 때 계속 반복
    x=q.popleft()
    if x == k: # x값이 동생 있는 k일 때 dist[x] 출력하고 종료 
      print(dist[x])
      break
    for j in (x-1,x+1,x*2): #4 6 10
      if 0<=j<=MAX and not dist[j]: #dist[j]가 0일 때 
        dist[j]=dist[x]+1
        q.append(j)


MAX = 10**5
dist = [0]*(MAX+1)
# MAX를 설정한 이유는 N과 K의 제한사항이 0에서부터 100,000이기 때문이다.
# 그다음 n, k 값을 입력받고 dist라는 배열을 최대수만큼 생성하고 0으로 초기화한다.


n,k=map(int,input().split()) # 5 17

bfs()
