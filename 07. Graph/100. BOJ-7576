# 최소일수 주변토마토익힘 >> BFS 문제 !!
# dfs 쓰면 안됨 > 깊이 들어갈 일 없기 때문

# bfs >> queue 사용 !
# deque 모듈 안쓰면 시간복잡도 너무 커짐
# pop(0) 시간복잡도가 O(n)이고 popleft()는 시간복잡도 O(1) !

import sys
read = sys.stdin.readline
from collections import deque
#sys.setrecursionlimit(10000)

m,n = map(int,input().split())

field = []
queue=deque([])

for i in range(n):
  field.append(list(map(int,input().split())))
  for j in range(m):
    if field[i][j]==1:
      queue.append([i,j]) # 익은 토마토 큐에 넣기

dx=[1,-1,0,0]
dy=[0,0,1,-1]

def bfs():
  while queue:
    x,y=queue.popleft()
    for i in range(4):
      nx=x+dx[i]
      ny=y+dy[i]
      if 0<=nx<n and 0<=ny<m and field[nx][ny]==0:
        # 토마토 익지 않았을 경우 - field[nx][ny]==0
        field[nx][ny]=field[x][y]+1
        queue.append([nx,ny])
bfs()
res=0
for i in field:
  for j in i:
    if j==0: # 다 훑어봤는데 토마토 익히지 못했다면 -1 출력
      print(-1)
      exit(0)
  res = max(res,max(i)) # 다 익혔다면 최댓값이 정답
print(res-1)
