# 순열사이클 10451 문제와 굉장히 유사
# 다른 점 > 반드시 팀의 마지막 학생은 팀의 첫 학생 지목해야한다는 점
# 팀이 결성되기 위해 첫과 끝이 이어진 사이클이어야

import sys
sys.setrecursionlimit(111111) #충분한 재귀로 오류 예방

def dfs(x):
  global result
  visited[x]=True
  cycle.append(x) #사이클 이루는 팀 확인하기 위함
  number = numbers[x] #다음 번호 확인

  if visited[number]: # 방문가능한 곳이 끝났는지 > 방문했다면
    if number in cycle: # 사이클 가능 여부
      result += cycle[cycle.index(number):] #사이클 되는 구간부터만 팀 이룸 >> 슬라이싱 !!
    return 
  else: 
    dfs(number)

for _ in range(int(input())):  #2
  n=int(input())               #7/8
  numbers=[0]+list(map(int,input().split())) #3137346/12345678 
  visited=[True]+[False]*n #방문여부
  result=[]

  for i in range(1,n+1):
    if not visited[i]: #방문 안했으면
      cycle=[]
      dfs(i)
  print(n-len(result)) #팀에 없는 사람 수 

 


