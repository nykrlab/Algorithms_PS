#BFS DFS 둘 다 가능
# BFS - 탐색 시작점 모르기 때문에 전체 돌면서 1인 지점에서 탐색 시작
# 탐색 중 1인 부분은 0으로 바꿔 다시 방문하지 않도록
# 한 번의 BFS 끝나게 되면 더 이상 확장 불가 > 마을 하나 탄생

from collections import deque

dx=[0,0,1,-1]
dy=[1,-1,0,0] # 우좌하상

def bfs(graph,a,b):
  n=len(graph)
  queue = deque()
  queue.append((a,b))
  graph[a][b]=0
  count=1

  while queue:
    x,y=queue.popleft()
    for i in range(4):
      nx=x+dx[i]
      ny=y+dy[i]
      if nx<0 or nx>=n or ny<0 or ny>=n:
        continue
      if graph[nx][ny]==1:
        graph[nx][ny]=0
        queue.append((nx,ny))
        count+=1
  return count

n = int(input()) #7
graph = []
for i in range(n):
  graph.append(list(map(int,input())))

cnt=[]
for i in range(n): #7
  for j in range(n): #7
    if graph[i][j]==1:
      cnt.append(bfs(graph,i,j))

cnt.sort()
print(len(cnt))
for i in range(len(cnt)):
  print(cnt[i])
