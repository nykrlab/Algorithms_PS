from collections import deque
import sys


# 입력변수 받기
n,m,v=map(int,input().split())

# 인접영행렬 생성
graph = [[0]*(n+1) for _ in range(n+1)]

# 방문한 곳 체크 위한 배열 선언
visited1 = [0]*(n+1)
visited2 = [0]*(n+1)

# 입력 받는 두 값에 대해 영행렬에 1 삽입
for _ in range(m):
  a,b = map(int,input().split())
  graph[a][b]=graph[b][a]=1 # 노드 연결


def dfs(v): #깊이우선
  visited1[v]=1 #방문한 곳 1 넣기
  print(v,end=' ')
  # 재귀함수 선언 (v와 인접한 곳 찾고, 방문하지 않았을 시에만 함수 실행)
  for i in range(1,n+1):
    if(visited1[i]==0 and graph[v][i]==1):
      dfs(i)

def bfs(v): #넓이우선
  q = deque() # 방문해야 할 곳을 순서대로 넣을 큐
  q.append(v)
  
  # dfs 완료한 visited 배열(1로 되어있음)에서 0으로 방문체크
  visited2[v]=1
  # 큐 안에 데이터 없을 때까지
  while q:
    v=q.popleft()
    print(v,end=' ')
    for i in range(1,n+1):
      # 방문하지 않고, 인접할 때
      if (visited2[i]==0 and graph[v][i]==1):
        q.append(i)
        visited2[i]=1

dfs(v)
print()
bfs(v)
