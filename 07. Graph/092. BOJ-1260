from collections import deque
import sys
input = sys.stdin.readline

n, m, v = map(int, input().split())

# 정점 연결상태 / 방문처리 리스트 정의
graph = [[0]*(n+1) for _ in range(n+1)]
visited_d = [0]*(n+1)
visited_b = [0]*(n+1)

# 정점 연결 상태 입력
for _ in range(m):
    i, j = map(int, input().split())
    graph[i][j]=graph[j][i]=1
    
def dfs(v):
    print(v, end=" ")
    visited_d[v]=1
    for i in range(1, n+1):
        if graph[v][i]==1 and visited_d[i]==0:	# 조건
            dfs(i)
        
def bfs(v):
    q = deque()	# deque 사용위해 정의
    q.append(v)
    while q:
        v = q.popleft()
        print(v, end=" ")
        visited_b[v]=1	# 방문처리
        for i in range(1, n+1):
            if graph[v][i]==1 and visited_b[i]==0:	# 조건
                q.append(i)	# 큐에 삽입하고
                visited_b[i]=1	# 방문처리
                
dfs(v)
print()
bfs(v)
