# n*n 행렬을 검사한 뒤 일관된 숫자 아니면 9등분
# 조건 만족하지 않는 경우 = 색상 모두 같지 않은 경우 ) 9개로 분할
# 9등분은 재귀함수 호출해서 풀고, 전달인자로 9개 각 종이 중 가장 왼쪽 위 좌표 크기 넣기
# 조건 만족하는 경우 (하나의 색상으로 구성되는 경우) 해당 색상 +1


import sys
input=sys.stdin.readline

n=int(input()) #9
graph=[list(map(int,input().split())) for _ in range(n)]

cnt_minus=0
cnt_zero=0
cnt_plus=0

def dfs(x,y,n):
  global cnt_minus,cnt_zero,cnt_plus

  num_check = graph[x][y] #-1 0 1 대입
  for i in range(x,x+n): #x~x+n-1
    for j in range(y,y+n): #y~y+n-1
      if(graph[i][j]!=num_check): #다르면 9등분 > 재귀
        for k in range(3):
          for l in range(3):
            dfs(x+k*n//3,y+l*n//3,n//3)
            # x + k * (n//3)
            # y + l * (n//3) 으로 보기 > 3의 배수만큼을 현재에서 +하여 시작점 다시 갱신, dfs 시작
            # n//3 : 높이는 3등분
        return

  if num_check==-1:
    cnt_minus+=1
  elif num_check==0:
    cnt_zero+=1
  else:
    cnt_plus+=1

dfs(0,0,n)
print(cnt_minus)
print(cnt_zero)
print(cnt_plus)
